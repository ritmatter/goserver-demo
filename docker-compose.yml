version: "3"
services:
  server:
    build: ./server
    ports:
      - "3000:3000"
      - "8080:8080"
    links:
      - redis
      - postgres
    depends_on:
      - redis
      - postgres
    environment:
      POSTGRES_HOST: ${HOST_IP}
      POSTGRES_PORT: "5433"
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "postgres"
      POSTGRES_DBNAME: "postgres"
      REDIS_ADDR: "${HOST_IP}:6379"
  pusher:
    build: ./pusher
    links:
      - kafka
      - redis
    depends_on:
      - kafka
      - postgres-connector
      - redis
  zookeeper:
    image: debezium/zookeeper:1.8
    ports:
      - 2181:2181
  kafka:
    image: debezium/kafka:1.8
    ports:
      - "9092:9092"
    links:
      - zookeeper
    environment:
      KAFKA_ADVERTISED_HOST_NAME: ${HOST_IP}
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
      KAFKA_DELETE_TOPIC_ENABLE: 'true'
      ZOOKEEPER_CONNECT: zookeeper:2181
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    hostname: kafka
  postgres:
    image: postgres
    ports:
      - "5433:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    command:
      - "postgres"
      - "-c"
      - "wal_level=logical"
    volumes:
      # Uncomment to persist data.
      #- ./postgres-data:/var/lib/postgresql/data
      # copy the sql script to create tables
      - ./sql/create_tables.sql:/docker-entrypoint-initdb.d/create_tables.sql
      - ./sql/fill_tables.sql:/docker-entrypoint-initdb.d/fill_tables.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5
  redis:
    image: "redis:alpine"
    ports:
      - "6379:6379"
  postgres-connector:
    image: debezium/connect:1.8
    ports:
      - "9090:8083"
    links:
      - kafka
    depends_on:
      - kafka
      - postgres
    environment:
      - BOOTSTRAP_SERVERS=kafka:9092
      - GROUP_ID=pg
      - CONFIG_STORAGE_TOPIC=pg_connect_configs
      - OFFSET_STORAGE_TOPIC=pg_connect_offsets
      - STATUS_STORAGE_TOPIC=pg_connect_statuses
